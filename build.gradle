plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "3.5.0"
}

version = "0.8.1"

group = "crfa.app"

repositories {
    mavenCentral()
    mavenLocal()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("crfa.app.*")
    }
}

dependencies {
    annotationProcessor('io.micronaut:micronaut-http-validation:3.7.1')
    annotationProcessor('io.micronaut:micronaut-inject-java:3.7.1')

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation("commons-io:commons-io:2.11.0")

    implementation('com.j256.ormlite:ormlite-jdbc:6.1')

    implementation 'io.vavr:vavr:1.0.0-alpha-4'

    implementation('org.redisson:redisson:3.17.7')

    implementation('org.xerial:sqlite-jdbc:3.39.3.0')

    implementation('com.h2database:h2:2.1.214')

    implementation('com.google.guava:guava:31.1-jre')

    implementation('io.micronaut:micronaut-http-client:3.7.1')
    implementation('io.micronaut:micronaut-runtime:3.7.1')
    implementation('io.micronaut:micronaut-validation:3.7.1')

    implementation('javax.annotation:javax.annotation-api:1.3.2')
    runtimeOnly('ch.qos.logback:logback-classic:1.4.1')

    implementation('io.micronaut:micronaut-validation:3.6.3')
    implementation("org.apache.commons:commons-lang3:3.12.0")

    testImplementation('org.assertj:assertj-core:3.23.1')
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation 'org.mockito:mockito-core:4.8.0'
    testAnnotationProcessor 'io.micronaut:micronaut-inject-java:3.7.1'
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.9.8')
    testImplementation('io.micronaut.test:micronaut-test-junit5:3.6.1')
    testImplementation 'org.mockito:mockito-junit-jupiter:4.8.0'
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.0')
}

application {
    mainClass.set("crfa.app.CRFADappStoreService")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

test {
    useJUnitPlatform()
}
